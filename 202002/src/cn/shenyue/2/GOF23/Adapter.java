/**
 * 结构性模式：
 * 核心作用：是从程序的结构上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题
 * 分类： 适配器模式，代理模式，桥接模式，装饰模式，组合模式，外观模式，享元模式
 *
 * 适配器模式：
 *  将一个类的接口转换成客户希望的另外一个接口。Adapter模式使得原本由于接口不兼容而不能一起工作
 *  的那些类可以在一起工作
 * 模式中的角色：
 *  目标接口（target），客户所期望的接口，目标可以是具体的或抽象的类，也可以是接口
 *  需要适配的类（Adaptee），需要适配的类或适配者类
 *  适配器（Adapter）：通过包装一个需要适配的对象，把原接口转换成目标接口
 *
 *  实现的两种方式：
 *   1. Adapter 实现target接口， 继承Adaptee类
 *   2. Adapter 实现target接口， 组合Adaptee类
 *
 */

public class Adapter {
}
